{"version":3,"sources":["Resume.js","Home.js","App.js","serviceWorker.js","index.js","man.svg","women.svg"],"names":["Resume","prop","info","data","profiles","location","id","className","basics","gender","src","profileIcon","alt","style","width","profileIcon1","name","fontStyle","role","href","email","mobile","address","summary","map","summaryValue","summaryIndex","key","education","educationValue","educationIndex","degree","institute","result","skills","skillsValue","skillsIndex","hobbies","hobbiesValue","hobbiesIndex","Home","console","log","value","index","boxShadow","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.a6e0e67c.chunk.js","sourcesContent":["import React from 'react';\r\nimport data from './data/data.json';\r\nimport profileIcon from './man.svg';\r\nimport profileIcon1 from './women.svg';\r\nlet Resume=(prop)=>{\r\n\r\n  let info=data.profiles[prop.location.data.id];\r\n  // console.log{prop.location.data.id};\r\n  return(\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-lg-3 m-2\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body text-center p-2\">\r\n          {info.basics.gender===\"male\" ? <img src={profileIcon} alt=\"Profile icon\"\r\n              style={{width:\"30%\"}}/> : <img src={profileIcon1} alt=\"Profile icon\"\r\n              style={{width:\"30%\"}}/>}\r\n             <h2>{info.basics.name}</h2>\r\n\r\n             <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}>{info.basics.role}</h5><hr/>\r\n             <a href={\"mailto:\"+info.basics.email}>{info.basics.email}</a><br></br>\r\n             <a href={\"tel:\"+info.basics.mobile}>{info.basics.mobile}</a><br/>\r\n             <p>{info.basics.address}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-8 m-2\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body p-2\">\r\n            <h3>Summary</h3> <hr />\r\n            <ul>\r\n              {info.summary.map((summaryValue,summaryIndex)=>(\r\n                <li key={summaryIndex}>{summaryValue}</li>\r\n              ))}\r\n            </ul>\r\n\r\n            <h3>Educational Qualifications</h3> <hr />\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-bordered\">\r\n               <thead className=\"thead-dark\">\r\n                    <tr>\r\n                     <th>Degree</th>\r\n                     <th>Institute</th>\r\n                     <th>Percentage</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {info.education.map((educationValue,educationIndex)=>(\r\n                     <tr key={educationIndex}>\r\n                        <td>\r\n                        {educationValue.degree}\r\n                        </td>\r\n                        <td>\r\n                        {educationValue.institute}\r\n                        </td>\r\n                        <td>\r\n                        {educationValue.result}\r\n                        </td>\r\n                     </tr>\r\n                   ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <h3>Skills</h3> <hr />\r\n              <ul>\r\n                {info.skills.map((skillsValue,skillsIndex)=>(\r\n                  <li key={skillsIndex}>{skillsValue}</li>\r\n                ))}\r\n              </ul>\r\n\r\n              <h3>Hobbies</h3> <hr />\r\n              <ul>\r\n                {info.hobbies.map((hobbiesValue,hobbiesIndex)=>(\r\n                  <li key={hobbiesIndex}>{hobbiesValue}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Resume;\r\n","import React from 'react';\r\nimport profileIcon from './man.svg';\r\nimport profileIcon1 from './women.svg';\r\nimport {BrowserRouter,Route,Switch,Link} from 'react-router-dom';\r\nimport data from './data/data.json';\r\n\r\n\r\nlet Home=()=>{\r\n  let profiles=data.profiles;\r\n  console.log(profiles);\r\n  return(\r\n     <div className=\"row justify-content-center \">\r\n    {profiles.map((value,index)=>(\r\n      <div className=\"col-lg-4 col-md-4 col-sm-10 mt-1\" key={index}>\r\n        <div className=\"card\" style={{boxShadow:\"0px 8px 8px -8px #000\"}}>\r\n          <div className=\"card-body text-center\">\r\n           {/* <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/>*/}\r\n         {value.basics.gender===\"male\" ? <img src={profileIcon} alt=\"Profile icon\"\r\n             style={{width:\"30%\"}}/> : <img src={profileIcon1} alt=\"Profile icon\"\r\n             style={{width:\"30%\"}}/>}\r\n\r\n            <h3>{value.basics.name}</h3>\r\n            <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}>{value.basics.role}</h5><hr/>\r\n            <a href={\"mailto:\"+value.basics.email}>{value.basics.email}</a><br></br>\r\n            <a href={\"tel:\"+value.basics.mobile}>{value.basics.mobile}</a><br/>\r\n\r\n            <Link to={{pathname:'/resume',data:{id:index}}} className=\"btn btn-secondary text-white btn-block btn-sm\">\r\n            View Profile\r\n            </Link>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n import data from './data/data.json';\r\n import profileIcon from './man.svg';\r\n import profileIcon1 from './women.svg';\r\n import {BrowserRouter,Route,Switch,Link} from 'react-router-dom';\r\n import Resume from './Resume';\r\nimport Home from './Home';\r\n\r\n//import SC from './StatesConcept'\r\n let App=()=>{\r\n\r\n   return(\r\n\r\n        <BrowserRouter>\r\n        <Switch>\r\n           <Route exact path='/home' component={Home} />\r\n           <Route exact path='/resume' component={Resume} />\r\n        </Switch>\r\n        </BrowserRouter>\r\n\r\n   )\r\n }\r\n\r\n // let Example=()=>{\r\n //   return(\r\n //     <div>\r\n //         <h2>Example Component</h2>\r\n //     </div>\r\n //   )\r\n // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/man.77d9312a.svg\";","module.exports = __webpack_public_path__ + \"static/media/women.9e379c2b.svg\";"],"sourceRoot":""}